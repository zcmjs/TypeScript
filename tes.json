import papaparse from 'https://jslib.k6.io/papaparse/5.1.1/index.js';
import { SharedArray } from "k6/data";
import http from 'k6/http';
import {sleep} from 'k6';

const BASE_URL = 'https://httpbin.org';

export const options = {
    scenarios: {
        authorization: {
            // name of the executor to use
            executor: 'ramping-vus',
            exec: "startAuthorization",
            startVUs: 0,
            stages: [
                {duration: '1s', target: 2},
                // {duration: '5s', target: 5},
                {duration: '1s', target: 0}
            ],
        },
        addUsers: {
            executor: 'shared-iterations',
            vus: 1,
            iterations: 1,
            maxDuration: "10m",
            exec: "addUser",
        },
    },
    thresholds: {
        // http_req_duration: ['p(95) < 600'],
        http_req_failed: ['rate<0.01'] //http errors should be less than 1%
    }
};

export function startAuthorization() {
    const payload = JSON.stringify({
        "user": "user1",
        "passwd": "pass1"
    });

    const params = {
        headers: {
            'Content-Type': 'application/json'
        }
    }

    const result = http.post(`${BASE_URL}/post`, payload, params);
    // check(result, {
    //     'status code is 200': (r) => r.status === 200,
    // })
    sleep(1);
}

export function addUser() {
    for (let i = 0; i < 1000; ++i) {
        const result = http.get(`http://localhost:8080/only-once-occurrence-number/${i}`);
        console.log(result);
        check(result, {
            'status code is 200': (r) => r.status === 200,
        })
    }
}

// authorization: {
//   // name of the executor to use
//   executor: 'shared-iterations',
//
//       // common scenario configuration
//       startTime: '10s',
//       gracefulStop: '5s',
//       env: { EXAMPLEVAR: 'testing' },
//   tags: { example_tag: 'testing' },
//
//   // executor-specific configuration
//   vus: 10,
//       iterations: 200,
//       maxDuration: '10s',
// },
